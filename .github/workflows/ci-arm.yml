name: Java CI with Gradle

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## gradle test
      - name: Test with Gradle
        run: ./gradlew test --stacktrace

      ## gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar --stacktrace -x test

      - name: Get Version, Name
        id: get-version-name
        run: |
          export APPLICATION_NAME=$(yq e '.spring.application.name' ./src/main/resources/application.yml)
          export VERSION=$(awk '/version =/{print $NF}' build.gradle | tr -d "'")
          echo "APPLICATION_NAME=$APPLICATION_NAME" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: dockerfile-arm
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ steps.get-version-name.outputs.APPLICATION_NAME }}:${{ steps.get-version-name.outputs.VERSION }}
          platforms: |
            linux/arm/v8

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          sudo apt update
          sudo apt install -y wget
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          export APPLICATION_NAME=$(yq e '.spring.application.name' ./src/main/resources/application.yml)
          export VERSION=$(awk '/version =/{print $NF}' build.gradle | tr -d "'")
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$APPLICATION_NAME:$VERSION .
          docker push ${{ secrets.DOCKER_USERNAME }}/$APPLICATION_NAME:$VERSION
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$APPLICATION_NAME:$VERSION-arm -f dockerfile-arm .
          docker push ${{ secrets.DOCKER_USERNAME }}/$APPLICATION_NAME:$VERSION-arm
